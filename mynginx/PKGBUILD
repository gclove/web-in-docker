# $Id: PKGBUILD 266697 2016-05-01 00:55:57Z seblu $
# Maintainer: shmilee
# Maintainer: Bartłomiej Piotrowski <bpiotrowski@archlinux.org>
# Maintainer: Sébastien Luttringer
# Contributor: Sergej Pupykin <pupykin.s+arch@gmail.com>
# Contributor: Miroslaw Szot <mss@czlug.icis.pcz.pl>
# Contributor: Daniel Micay <danielmicay@gmail.com>

_pkgname=nginx
_pkgver=1.10.2

### 3d party modules:
# psol version: PageSpeed Optimization Library, for ngx_pagespeed
_NPS_VERSION=1.11.33.2
# (shortName) (fullName) (version) (downloadUrl)
# format downloadUrl: printf "https://github.com/downloadUrl" fullName version
_githubmodules=(
  'auth_pam       ngx_http_auth_pam_module      1.5.1  stogh/%s/archive/v%s.tar.gz'     #0
  'concat         nginx-http-concat b8d3e7ec511724a6900ba3915df6b504337891a9 alibaba/%s/archive/%s.tar.gz'
  'echo           echo-nginx-module             0.59   openresty/%s/archive/v%s.tar.gz'
  'fancyindex     ngx-fancyindex                0.4.1  aperezdc/%s/archive/v%s.tar.gz'
  'google_filter  ngx_http_google_filter_module 0.2.0  cuber/%s/archive/%s.tar.gz'
  'headers-more   headers-more-nginx-module     0.31   openresty/%s/archive/v%s.tar.gz' #5
  'naxsi          naxsi                         0.55.1 nbs-system/%s/archive/%s.tar.gz'
  'nchan          nchan                         1.0.4  slact/%s/archive/v%s.tar.gz'
  "pagespeed      ngx_pagespeed  ${_NPS_VERSION}-beta  pagespeed/%s/archive/v%s.tar.gz"
  'replace_filter replace-filter-nginx-module 2c7f0656c816e347ba43a7909120d434a168044c openresty/%s/archive/%s.tar.gz'
  'rtmp           nginx-rtmp-module c3237ae747ff0b06494326731e215c23ae884966 sergey-dryabzhinsky/%s/archive/%s.tar.gz' #10
  'subs_filter    ngx_http_substitutions_filter_module bc58cb11844bc42735bbaef7085ea86ace46d05b yaoweibin/%s/archive/%s.tar.gz'
  'upstream-fair  nginx-upstream-fair a18b4099fbd458111983200e098b6f0c8efed4bc gnosek/%s/archive/%s.tar.gz'
)
### END

pkgbase=mynginx
pkgname=(mynginx mynginx-pagespeed)
pkgver=${_pkgver}
pkgrel=1
_shortNames=''
for _m in "${_githubmodules[@]}";do
  _mod=($_m)
  [[ xpagespeed == x${_mod[0]} ]] && continue
  _shortNames+=" ${_mod[0]}"
done
pkgdesc="Lightweight HTTP server and IMAP/POP3 proxy server - with $_shortNames support"
arch=('i686' 'x86_64')
url='http://nginx.org'
license=('custom')
depends=('pcre' 'zlib' 'openssl' 'geoip')
optdepends=('sregex: replace_filter support')
makedepends=('hardening-wrapper' 'sregex')

source=($url/download/nginx-$pkgver.tar.gz
        service
        logrotate
        psol-${_NPS_VERSION}.tar.gz::https://dl.google.com/dl/page-speed/psol/${_NPS_VERSION}.tar.gz)
for _m in "${_githubmodules[@]}";do
  _mod=($_m)
  source+=($(printf "${_mod[1]}-${_mod[2]}.tar.gz::https://github.com/${_mod[3]}" ${_mod[1]} ${_mod[2]}))
done
sha256sums=('1045ac4987a396e2fa5d0011daf8987b612dd2f05181b67507da68cbe7d765c2'
            '4ecbc33ce4bf2965996f51b0c7edb677904ba5cff9a32e93e1487a428d3a751b'
            '2613986dd5faab09ca962264f16841c8c55c3a0bc7a5bb737eabd83143090878'
            '1ccb59e81a4cdfd2d8e664c9ee1b31fa2f495aace640d4d14f58319688aaff8e'
            '77676842919134af88a7b4bfca4470223e3a00d287d17c0dbdc9a114a685b6e7'
            'e34ef51c299bc3d662b6c74031f7ad9775d73e84cfaa4e72810959fe1760413c'
            '9b319ad7836202883128d2b9c24ed818082541df57ef7f2065b7557085c603cd'
            '2b00d8e0ad2a67152a9cee7b7ee67990c742d501412df912baaf1eee9bb6dc71'
            '9cd68c8e092efb1a419e1087bb9ca23aab1ff8650c400c0aa815d461d79385de'
            'b2e8162cce2d24861b1ed5bbb30fc51d5215e3f4bb9d01f53fc344904d5911e7'
            '45dd0df7a6b0b6aa9c64eb8c39a8e294d659d87fb18e192cf58f1402f3cdb0a8'
            '212e973a6fda6ce82344815baf6d2324200d1b5c49ac9c34cfc6f0fb5ebcafbb'
            'dfb3c62345ea95e4aec50b449d75bcdf1c868b5c3d62d6c7e0e73632ebe20101'
            'ab1d3bbea62ab9f0b804d286980abe323c735635993c2b82806c7b9abe8186cd'
            '3245b7747fb468cb94e367c4735a29a76bcc42f46ffd8f532e165b6db71d3ca6'
            '8eabbcd5950fdcc718bb0ef9165206c2ed60f67cd9da553d7bc3e6fe4e338461'
            'c051d33a8732b671b33e0b3535e6fbbd82311c6d89532c4067b3d2ba738e1ce1')

_common_flags=(
  --with-ipv6
  --with-pcre-jit
  --with-file-aio
  --with-http_addition_module
  --with-http_auth_request_module
  --with-http_dav_module
  --with-http_degradation_module
  --with-http_flv_module
  --with-http_geoip_module
  --with-http_gunzip_module
  --with-http_gzip_static_module
  --with-http_mp4_module
  --with-http_realip_module
  --with-http_secure_link_module
  --with-http_ssl_module
  --with-http_stub_status_module
  --with-http_sub_module
  --with-http_v2_module
  --with-mail
  --with-mail_ssl_module
  --with-stream
  --with-stream_ssl_module
  --with-threads
)

_stable_flags=(
)

_3d_party_modules_flags=(
  --modules-path=/usr/lib/nginx
)
for _m in "${_githubmodules[@]}";do
  _mod=($_m)
  if [[ xnaxsi == x${_mod[0]} ]]; then
    _3d_party_modules_flags+=("--add-dynamic-module=../${_mod[1]}-${_mod[2]}/naxsi_src")
  else
    _3d_party_modules_flags+=("--add-dynamic-module=../${_mod[1]}-${_mod[2]}")
  fi
done

# usage: _get_module_dir shortName, -> fullName-version
_get_module_dir() {
  local _shortname=$1
  for _m in "${_githubmodules[@]}";do
    _mod=($_m)
    if [[ x$_shortname == x${_mod[0]} ]]; then
      echo ${_mod[1]}-${_mod[2]}
      return 0
    fi
  done
  error "$_shortname Not Found in '_githubmodules' array."
}

prepare() {
  cd $(_get_module_dir 'fancyindex')
  sed -i 's/Parent directory/\.\./' ngx_http_fancyindex_module.c template.h
  sed -i 's/File Name/文件名/;s/File Size/文件大小/;s/Date/日期/' template.h # zh ..

  cd ../$(_get_module_dir 'upstream-fair')
  cat >./config <<'EOF'
ngx_addon_name=ngx_http_upstream_fair_module
if test -n "$ngx_module_link"; then
    ngx_module_type=HTTP
    ngx_module_name=ngx_http_upstream_fair_module
    ngx_module_srcs="$ngx_addon_dir/ngx_http_upstream_fair_module.c"
    . auto/module
else
    HTTP_MODULES="$HTTP_MODULES ngx_http_upstream_fair_module"
    NGX_ADDON_SRCS="$NGX_ADDON_SRCS $ngx_addon_dir/ngx_http_upstream_fair_module.c"
fi
EOF

  cd ../$(_get_module_dir 'subs_filter')
  cat >./config <<'EOF'
ngx_addon_name=ngx_http_subs_filter_module
if test -n "$ngx_module_link"; then
    ngx_module_type=HTTP_AUX_FILTER
    ngx_module_name=ngx_http_subs_filter_module
    ngx_module_srcs="$ngx_addon_dir/ngx_http_subs_filter_module.c"
    . auto/module
else
    HTTP_AUX_FILTER_MODULES="$HTTP_AUX_FILTER_MODULES ngx_http_subs_filter_module"
    NGX_ADDON_SRCS="$NGX_ADDON_SRCS $ngx_addon_dir/ngx_http_subs_filter_module.c"
fi
EOF

  cd ../$(_get_module_dir 'google_filter')
  cat >./config <<'EOF'
ngx_addon_name=ngx_http_google_filter_module
if test -n "$ngx_module_link"; then
    ngx_module_type=HTTP_AUX_FILTER
    ngx_module_name=ngx_http_google_filter_module
    ngx_module_srcs="$ngx_addon_dir/src/*.c"
    . auto/module
else
    HTTP_AUX_FILTER_MODULES="$HTTP_AUX_FILTER_MODULES ngx_http_google_filter_module"
    NGX_ADDON_SRCS="$NGX_ADDON_SRCS $ngx_addon_dir/src/*.c"
    NGX_ADDON_DEPS="$NGX_ADDON_DEPS $ngx_addon_dir/src/*.h"
fi
EOF
sed -i '/apis.*google.*com/a \
                                         "$google_host/!$1",\
                                         "igr"))\
      break;\
    \
    if (ngx_http_google_inject_subs_args(cf,\
                                         "subs_filter", 3, \
                                         "((id)\\.google\\.com)",' src/ngx_http_google_inject.c

  cd ../$(_get_module_dir 'concat')
  cat >./config <<'EOF'
ngx_addon_name=ngx_http_concat_module
if test -n "$ngx_module_link"; then
    ngx_module_type=HTTP
    ngx_module_name=$ngx_addon_name
    ngx_module_srcs="$ngx_addon_dir/ngx_http_concat_module.c"
    . auto/module
else
    HTTP_MODULES="$HTTP_MODULES ngx_http_concat_module"
    NGX_ADDON_SRCS="$NGX_ADDON_SRCS $ngx_addon_dir/ngx_http_concat_module.c"
fi
EOF

  cd ../$(_get_module_dir 'pagespeed')
  [ -d psol ] && rm -r psol/
  mv ../psol ./
}

build() {
  cd ${_pkgname}-${_pkgver}

  ./configure \
    --prefix=/etc/nginx \
    --conf-path=/etc/nginx/nginx.conf \
    --sbin-path=/usr/bin/nginx \
    --pid-path=/run/nginx.pid \
    --lock-path=/run/lock/nginx.lock \
    --user=http \
    --group=http \
    --http-log-path=/var/log/nginx/access.log \
    --error-log-path=stderr \
    --http-client-body-temp-path=/var/lib/nginx/client-body \
    --http-proxy-temp-path=/var/lib/nginx/proxy \
    --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \
    --http-scgi-temp-path=/var/lib/nginx/scgi \
    --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \
    ${_common_flags[@]} \
    ${_stable_flags[@]} \
    ${_3d_party_modules_flags[@]}

  make
}

package_mynginx() {
  conflicts=('nginx')
  provides=('nginx')
  backup=('etc/nginx/fastcgi.conf'
          'etc/nginx/fastcgi_params'
          'etc/nginx/koi-win'
          'etc/nginx/koi-utf'
          'etc/nginx/mime.types'
          'etc/nginx/nginx.conf'
          'etc/nginx/scgi_params'
          'etc/nginx/uwsgi_params'
          'etc/nginx/win-utf'
          'etc/logrotate.d/nginx')
  install=nginx.install

  cd ${_pkgname}-${_pkgver}
  make DESTDIR="$pkgdir" install

  sed -e 's|\<user\s\+\w\+;|user html;|g' \
    -e '44s|html|/usr/share/nginx/html|' \
    -e '54s|html|/usr/share/nginx/html|' \
    -i "$pkgdir"/etc/nginx/nginx.conf

  rm "$pkgdir"/etc/nginx/*.default

  install -d "$pkgdir"/var/lib/nginx
  install -dm700 "$pkgdir"/var/lib/nginx/proxy

  chmod 750 "$pkgdir"/var/log/nginx
  chown http:log "$pkgdir"/var/log/nginx

  install -d "$pkgdir"/usr/share/nginx
  mv "$pkgdir"/etc/nginx/html/ "$pkgdir"/usr/share/nginx

  install -Dm644 ../logrotate "$pkgdir"/etc/logrotate.d/nginx
  install -Dm644 ../service "$pkgdir"/usr/lib/systemd/system/nginx.service
  install -Dm644 LICENSE "$pkgdir"/usr/share/licenses/${_pkgname}/LICENSE

  rmdir "$pkgdir"/run

  install -d "$pkgdir"/usr/share/man/man8/
  gzip -9c man/nginx.8 > "$pkgdir"/usr/share/man/man8/nginx.8.gz

  for i in ftdetect indent syntax; do
    install -Dm644 contrib/vim/${i}/nginx.vim \
      "${pkgdir}/usr/share/vim/vimfiles/${i}/nginx.vim"
  done
  # add .vhost to ftdetect
  echo "au BufRead,BufNewFile *.vhost set ft=nginx" \
    >> "${pkgdir}/usr/share/vim/vimfiles/ftdetect/nginx.vim"

  rm "${pkgdir}/usr/lib/nginx"/ngx_pagespeed.so
}

package_mynginx-pagespeed() {
  pkgver=${_pkgver}_${_NPS_VERSION}
  pkgdesc='Automatic PageSpeed optimization module for Nginx'
  url='https://github.com/pagespeed/ngx_pagespeed'
  depends=("mynginx=${_pkgver}")
  license=('Apache')

  cd ${_pkgname}-${_pkgver}
  install -Dm755 objs/ngx_pagespeed.so "${pkgdir}/usr/lib/nginx"/ngx_pagespeed.so
}
# vim:set ts=2 sw=2 et:
