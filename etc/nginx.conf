user http;
worker_processes  2;
# work with supervisor
daemon off;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /srv/log/nginx-access.log main buffer=32k;
    error_log   /srv/log/nginx-error.log notice;

    sendfile        on;
    #tcp_nopush     on;

    server_tokens off; # version display

    #keepalive_timeout  0;
    keepalive_timeout  65;

    fastcgi_buffer_size 128k;
    fastcgi_buffers 2 256k;
    fastcgi_busy_buffers_size 256k;
    fastcgi_temp_file_write_size 256k;

    gzip  on;
    client_max_body_size 30M;

    server {
        listen       80;
        server_name  localhost;

        #access_log  logs/host.access.log  main;

        root      /srv/http;
        include   /etc/nginx/fastcgi.conf;
        include   /etc/nginx/fastcgi_params;
        index     index.html index.htm index.php;
        charset   utf-8;


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location ~ \.php$ {
            #read http://wiki.nginx.org/PHPFcgiExample#Notes
            #try_files      $uri = 404;
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;
            if (!-f $document_root$fastcgi_script_name) {
                return 404;
            }
            fastcgi_pass   unix:/run/php-fpm/php-fpm.sock;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.ht {
            deny  all;
        }

        #ipython nbserver
        #location  /ipynb/ {
        #    proxy_set_header X-Real-IP $remote_addr;
        #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #    proxy_set_header Host $http_host;
        #    proxy_set_header X-NginX-Proxy true;
        #    proxy_pass         http://jupyter_notebook:8888;
        #    proxy_redirect off;
        #    proxy_http_version 1.1;
        #    proxy_set_header Upgrade $http_upgrade;
        #    proxy_set_header Connection "upgrade";
        #}

        #Cgit
        location /cgit {
            include /etc/nginx/fastcgi_params;
            fastcgi_param SCRIPT_FILENAME /usr/lib/cgit/cgit.cgi;
            fastcgi_pass unix:/run/fcgiwrap.sock;
            fastcgi_split_path_info           ^(/cgit/?)(.+)$;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param QUERY_STRING $args;
        }
        location /cgit-web {
            rewrite ^/cgit-web(/.*)$ $1 break;
            root /usr/share/webapps/cgit;
        }

        #upload
        location /upload {
            fancyindex on;
            fancyindex_exact_size off;
            fancyindex_localtime on;
            include    /etc/nginx/mime.types;
            types {
                # here is additional types
                text/plain  log sh m md rst;
            }
        }
        #AUR repo
        location /repo-shmilee {
            alias /srv/repo-shmilee;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
            include    /etc/nginx/mime.types;
            types {
                text/plain  log;
            }
        }

        # status
        location /status {   
        stub_status on;   
        access_log on;
        }
    }

    # nbviewer
    server {
        listen                808;
        server_name           localhost;

        location  / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;
            proxy_pass         http://127.0.0.1:8080;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}
